<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.seasydocker</groupId>
  <artifactId>seasy-docker-agent</artifactId>
  <version>0.0.1</version>
  <packaging>jar</packaging>

  <properties>
 	<java.version>1.8</java.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
  </properties>
  
  <dependencies>
  	<dependency>
    	<groupId>com.seasydocker</groupId>
    	<artifactId>seasy-docker-common</artifactId>
    	<version>0.0.1</version>
	</dependency>
	
    <!-- mina -->
  	<dependency>
    	<groupId>org.apache.mina</groupId>
    	<artifactId>mina-core</artifactId>
    	<version>2.1.5</version>
	</dependency>
	
	<!-- thrift -->
  	<dependency>
  		<groupId>org.apache.thrift</groupId>
  		<artifactId>libthrift</artifactId>
  		<version>0.12.0</version>
	</dependency>
	<dependency>
	    <groupId>org.reflections</groupId>
	    <artifactId>reflections</artifactId>
	    <version>0.9.11</version>
	</dependency>
	
	<!-- json -->
	<dependency>
  		<groupId>net.sf.json-lib</groupId>
  		<artifactId>json-lib</artifactId>
  		<version>2.4</version>
  		<classifier>jdk15</classifier>
	</dependency>
	<dependency>
    	<groupId>net.sf.ezmorph</groupId>
    	<artifactId>ezmorph</artifactId>
    	<version>1.0.6</version>
	</dependency>
	<dependency>
    	<groupId>commons-lang</groupId>
    	<artifactId>commons-lang</artifactId>
    	<version>2.6</version>
	</dependency>
	<dependency>
    	<groupId>commons-collections</groupId>
    	<artifactId>commons-collections</artifactId>
    	<version>3.2.2</version>
	</dependency>
	<dependency>
    	<groupId>commons-beanutils</groupId>
    	<artifactId>commons-beanutils</artifactId>
    	<version>1.9.3</version>
	</dependency>
	
	<!-- log -->
	<dependency>
  		<groupId>org.slf4j</groupId>
  		<artifactId>slf4j-api</artifactId>
  		<version>1.7.21</version>
	</dependency>
	<dependency>
    	<groupId>ch.qos.logback</groupId>
    	<artifactId>logback-core</artifactId>
    	<version>1.1.11</version>
	</dependency>
	<dependency>
    	<groupId>ch.qos.logback</groupId>
    	<artifactId>logback-classic</artifactId>
    	<version>1.1.11</version>
	</dependency>
	
<!--     <dependency> -->
<!--         <groupId>junit</groupId> -->
<!--         <artifactId>junit</artifactId> -->
<!--         <version>3.8.1</version> -->
<!--         <scope>test</scope> -->
<!--     </dependency> -->
  </dependencies>
  	
  	<build>
    	<finalName>seasy-docker-agent</finalName>
    	
    	<plugins>
			<plugin>
		        <groupId>org.codehaus.mojo</groupId>
		        <artifactId>properties-maven-plugin</artifactId>
		        <version>1.0.0</version>
		        <executions>
		          	<execution>
			            <phase>initialize</phase>
			            <goals>
			              	<goal>read-project-properties</goal>
			            </goals>
			            <configuration>
			              	<files>
			                	<file>${project.basedir}/pom.properties</file>
			              	</files>
			            </configuration>
		          	</execution>
		        </executions>
	      	</plugin>
	      	
	    	<plugin>
	            <groupId>org.apache.maven.plugins</groupId>
	            <artifactId>maven-compiler-plugin</artifactId>
	            <configuration>
	                <source>1.8</source>
	                <target>1.8</target>
	                <encoding>UTF-8</encoding>
	            </configuration>
	        </plugin>
        
        	<plugin>  
            	<groupId>org.apache.maven.plugins</groupId>  
            	<artifactId>maven-jar-plugin</artifactId>  
            	<version>2.4</version>  
            	<configuration>
                	<archive>
                    	<!-- 生成的jar中，不要包含pom.xml和pom.properties这两个文件 -->  
<!--                     	<addMavenDescriptor>false</addMavenDescriptor>   -->
  
                    	<manifest>  
                        	<!-- 是否要把第三方jar放到manifest的classpath中 -->  
                        	<addClasspath>true</addClasspath>  
                        	
                        	<!-- 生成的manifest中classpath的前缀，因为要把第三方jar放到lib目录下，所以classpath的前缀是lib/ -->  
                        	<classpathPrefix>lib/</classpathPrefix>
                    	</manifest> 
                	</archive> 
            	</configuration>  
        	</plugin>  
  
        	<plugin>  
            	<groupId>org.apache.maven.plugins</groupId>  
            	<artifactId>maven-assembly-plugin</artifactId>  
            	<version>2.4</version>  
            	<configuration>  
                	<descriptors>  
                    	<descriptor>src/main/assembly/package.xml</descriptor>  
                	</descriptors>  
            	</configuration>  
            	<executions>  
	                <execution>  
	                    <id>make-assembly</id>  
	                    <phase>package</phase>  
	                    <goals>  
	                        <goal>single</goal>  
	                    </goals>  
	                </execution>  
            	</executions>  
        	</plugin>  
        	
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>dockerfile-maven-plugin</artifactId>
				<version>1.4.10</version>
				<executions>
					<execution>
						<id>default</id>
						<goals>
							<!--如果package时不想用docker打包,就注释掉这个goal-->
							<goal>build</goal>
							<!-- <goal>push</goal> -->
						</goals>
					</execution>
				</executions>
				<configuration>
					<contextDirectory>${project.basedir}</contextDirectory>
					<dockerfile>Dockerfile</dockerfile>
					
					<repository>${docker.image.prefix}/${project.artifactId}</repository>
					<tag>${project.version}</tag> <!-- 不指定tag默认为latest -->
					
					<buildArgs>
						<!-- 提供参数向Dockerfile传递，在Dockerfile中需要用ARG定义该参数 -->            
						<build_message>start build docker...</build_message>           
					</buildArgs>
				</configuration>
			</plugin>
    	</plugins>
	</build>
	
</project>
